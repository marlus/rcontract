<%= select :contract_type, :contract_category_id,
       ContractCategory.find(:all).collect {|c| [ c.name, c.id ] },
       { :include_blank => true } %>
<% javascript_tag do -%>
  var <%= "#{form_items}" %> = [
	{ 
		fieldLabel:    'Categoria',
		xtype:         'combo',
		triggerAction: 'all',
		typeAhead:      true,
		forceSelection: true,
		transform:     'contract_type_contract_category_id',
		lazyRender:     true
	},
	{
		fieldLabel:    'Documento',
		xtype:         'textfield',
		name:		   'contract_types[document]',
		allowBlank:	   'false',
		width:         250
	}
  ];


	Ext.grid.CheckColumn = function(config){
	    Ext.apply(this, config);
	    if(!this.id){
	        this.id = Ext.id();
	    }
	    this.renderer = this.renderer.createDelegate(this);
	};

	Ext.grid.CheckColumn.prototype ={
	    init : function(grid){
	        this.grid = grid;
	        this.grid.on('render', function(){
	            var view = this.grid.getView();
	            view.mainBody.on('mousedown', this.onMouseDown, this);
	        }, this);
	    },

	    onMouseDown : function(e, t){
	        if(t.className && t.className.indexOf('x-grid3-cc-'+this.id) != -1){
	            e.stopEvent();
	            var index = this.grid.getView().findRowIndex(t);
	            var record = this.grid.store.getAt(index);
	            record.set(this.dataIndex, !record.data[this.dataIndex]);
	        }
	    },

	    renderer : function(v, p, record){
	        p.css += ' x-grid3-check-col-td'; 
	        return '<div class="x-grid3-check-col'+(v?'-on':'')+' x-grid3-cc-'+this.id+'">&#160;</div>';
	    }
	};


	//Adiciona na 2 posicao do array o Panel
	<%= "#{form_items}" %>[2] = grid;

	    Ext.QuickTips.init();

	    function formatDate(value){
	        return value ? value.dateFormat('M d, Y') : '';
	    };
	    // shorthand alias
	    var fm = Ext.form;

	    // custom column plugin example
	    var checkColumn = new Ext.grid.CheckColumn({
	       header: "Obrigat√≥rio?",
	       dataIndex: 'indoor',
	       width: 85
	    });

	    // the column model has information about grid columns
	    // dataIndex maps the column to the specific data field in
	    // the data store (created below)
	    var cm = new Ext.grid.ColumnModel([{
	           id:'common',
	           header: "Nome do campo",
	           dataIndex: 'common',
	           width: 220,
	           editor: new fm.TextField({
	               allowBlank: false
	           })
	        },{
	           header: "Tipo do campo",
	           dataIndex: 'light',
	           width: 130,
	           editor: new Ext.form.ComboBox({
	               typeAhead: true,
	               triggerAction: 'all',
	               transform:'light',
	               lazyRender:true,
	               listClass: 'x-combo-list-small'
	            })
	        },
	        checkColumn
	    ]);

	    // by default columns are sortable
	    cm.defaultSortable = true;

	    // this could be inline, but we want to define the Plant record
	    // type so we can add records dynamically
	    var Plant = Ext.data.Record.create([
	           // the "name" below matches the tag name to read, except "availDate"
	           // which is mapped to the tag "availability"
	           {name: 'common', type: 'string'},
	           {name: 'light'},
	           {name: 'indoor', type: 'bool'}
	      ]);

		//create dados
		var myData = "'plant' : [{'common':'Novo campo 1','light':'Texto','indoor':'false'}]";

	    var storeNew = new Ext.data.Store({
			data:myData,
	         reader: new Ext.data.JsonReader({record: 'plant'}, Plant)
	         });

	    // create the Data Store
	    var store = new Ext.data.Store({
	        // load using HTTP
	        url: 'http://extjs.com/deploy/dev/examples/grid/plants.xml',

	        // the return will be XML, so lets set up a reader
	        reader: new Ext.data.XmlReader({
	               // records will have a "plant" tag
	               record: 'plant'
	           }, Plant),

	        sortInfo:{field:'common', direction:'ASC'}
	    });

	    // trigger the data store load
	    store.load();

	    // create the editor grid
	    var grid = new Ext.grid.EditorGridPanel({
	        store: store,
	        cm: cm,
	        width:600,
	        height:300,
	        autoExpandColumn:'common',
	        //title:'Edit Plants?',
	        frame:true,
	        plugins:checkColumn,
	        clicksToEdit:1,
			datachanged : this,
	        tbar: [{
	            text: 'Adicionar Campo',
	            handler : function(){
	                var p = new Plant({
	                    common: 'Novo Campo',
	                    light: 'Texto',
	                    indoor: false
	                });
	                grid.stopEditing();
	                store.insert(0, p);
	                grid.startEditing(0, 0);
					store.reload();
					//panel.doLayout();
	            }
	        }]
	    });

	store.reload();
	//panel.doLayout();

<% end -%>

<select name="light" id="light" style="display: none;">
	<option value="Data">Data</option>
	<option value="Texto">Texto</option>
</select>
