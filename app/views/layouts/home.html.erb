<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
       "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
  <meta http-equiv="content-type" content="text/html;charset=UTF-8" />
  <title>Users: <%= controller.action_name %></title>
  <%= stylesheet_link_tag 'ext_scaffold' %>
  <%= stylesheet_link_tag "../ext/resources/css/ext-all.css" %>
  <%= javascript_include_tag :defaults %>
  <%= javascript_include_tag "../ext/adapter/prototype/ext-prototype-adapter.js" %>
  <%= javascript_include_tag RAILS_ENV == "development" ? "../ext/ext-all-debug.js" : "../ext/ext-all.js" %>
  <%= javascript_include_tag "ext_datetime.js" %>
  <%= javascript_include_tag "ext_searchfield.js" %>
  <%= javascript_include_tag "../ext/build/locale/ext-lang-pt_BR.js" %>
</head>
<body>

<div style="padding-left:20px">
<div style="height:20px">
<p style="color: green" id="flash-message"><%= flash[:notice] %></p>
<% javascript_tag do -%>
  setTimeout(function() { new Effect.Fade("flash-message",{}); }, 2000);
<% end -%>
</div>

<% javascript_tag do -%>
    Ext.onReady(function(){

        // NOTE: This is an example showing simple state management. During development,
        // it is generally best to disable state management as dynamically-generated ids
        // can change across page loads, leading to unpredictable results.  The developer
        // should ensure that stable state ids are set for stateful components in real apps.
        Ext.state.Manager.setProvider(new Ext.state.CookieProvider());
        
       var viewport = new Ext.Viewport({
            layout:'border',
            items:[
                new Ext.BoxComponent({ // raw
                    region:'north',
                    el: 'north',
                    height:32
                }),{
                    region:'south',
                    contentEl: 'south',
                    split:true,
                    height: 100,
                    minSize: 100,
                    maxSize: 200,
                    collapsible: true,
                    title:'South',
                    margins:'0 0 0 0'
                }, {
                    region:'east',
                    title: 'East Side',
                    collapsible: true,
                    split:true,
                    width: 225,
                    minSize: 175,
                    maxSize: 400,
                    layout:'fit',
                    margins:'0 5 0 0'
                 },{
                    region:'west',
                    id:'west-panel',
                    title:'West',
                    split:true,
                    width: 200,
                    minSize: 175,
                    maxSize: 400,
                    collapsible: true,
                    margins:'0 0 0 5',
                    layout:'accordion',
                    layoutConfig:{
                        animate:true
                    },
                    items: [{
                        contentEl: 'west',
                        title:'Navigation',
                        border:false,
                        iconCls:'nav'
                    },{
                        title:'Settings',
                        html:'<p>Some settings in here.</p>',
                        border:false,
                        iconCls:'settings'
                    }]
                },
                new Ext.TabPanel({
                    region:'center',
                    deferredRender:false,
                    activeTab:0,
                    items:[{
                        contentEl:'center1',
                        title: 'Center',
                        closable:false,
                        autoScroll:true
                    }]
                })
             ]
        });
        
    });
<% end -%>

  <div id="west">
	  <div id="category-tree"></div>
	  <% javascript_tag do -%>
	    Ext.onReady(function(){
	      
		  // create initial root node
		  var root = new Ext.tree.AsyncTreeNode({
	        text: 'Invisible Root',
	        draggable:false,
	        id:'0',
	        children: cat_json
	      });
	    	    
	  	  // create the tree
	      tree = new Ext.tree.TreePanel({
	        loader: new Ext.tree.TreeLoader({
	          url:'/categories',
	          requestMethod:'GET',
	          baseParams:{format:'json'}
	        }),
	        renderTo:'category-tree',
	        root: root,
	        rootVisible:false
	      });
	
	      // create the action
		  var cat_json = [{
			onclick: "new Ajax.Request('http://domain/users/1.js', {asynchronous:true, evalScripts:true, method:'get'}); false;", 
	        cls: "file", 
	        text: "Forename Surname", 
	        id: "user_1", 
	        leaf: true
		  }];
		
	      // expand invisible root node to trigger load
	      // of the first level of actual data
	      // tree.setRootNode(root);
	      tree.on('click', function(n){
			alert("hello" + n.attributes.onclick);
	        if(n.isLeaf() && n.attributes.onclick){
	          eval(n.attributes.onclick);
	        }
	      });

	      tree.render();
	      root.expand();
	    });
	  <% end -%>
  </div>
  <div id="north">
    <p></p>
  </div>

  <div id="center1" style="height:100%"><%= yield  %></div>
  <div id="props-panel" style="width:200px;height:200px;overflow:hidden;">
  </div>
  <div id="south">
    <p></p>
  </div>

</body>
</html>